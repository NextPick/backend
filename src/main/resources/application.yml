spring:
  #  data:
  #    redis:
  #      host: 127.0.0.1
  #      port: 6379
  datasource:
    url: ${AWS_RDS_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  sql:
    init:
      mode: always
      data-locations: classpath:data.sql      # MySQL 데이터 파일 경로
#      schema-locations:
#  mail:
#    host: smtp.gmail.com
#    port: 587
#    username: nextPick@gmail.com
#    password: sqbloeerxjcuepmr
#    properties:
#      mail.smtp.auth: true
#      mail.smtp.starttls.enable: true
#      mail.smtp.starttls.required: true
#      mail.smtp.connectiontimeout: 5000
#      mail.smtp.timeout: 5000
#      mail.smtp.writetimeout: 5000
#    auth-code-expiration-millis: 600000
openai:
  model: gpt-4o-mini
  api:
    key: ${{ secrets.OPENAI_API_KEY }}
    url: ${{ secrets.OPENAI_API_URL }}
logging:
  level:
    com.google.cloud.speech: DEBUG # Google Speech API 관련 로깅
    root: INFO
    org.springframework.security: DEBUG # Spring Security 전체 디버그 로그
    org:
      springframework:
        orm:
          jpa: DEBUG
mail:
  address:
    admin: ${{ secrets.MAIL_ADMIN }}
jwt:
  key: ${{ secrets.JWT_KEY }}
  access-token-expiration-minutes: ${{ secrets.ACCESS_TOKEN_EXPIRATION }}  # 임시 6000초 flex
  refresh-token-expiration-minutes: ${{ secrets.REFRESH_TOKEN_EXPIRATION }}

  email:
    super-code: ${{ secrets.EMAIL_SUPER_CODE }}

#cloud:
#  aws:
#    credentials:
#      accessKey: # 실제 IAM의 엑세스 키로 변경
#      secretKey: # 실제 IAM의 시크릿 키로 변경
#    region:
#      static: ap-northeast-2  # 실제 사용하는 AWS 리전으로 변경
#    stack:
#      auto: false
#    s3:
#      enabled: true
#      bucket:   # 실제 S3 버킷 이름으로 변경
clova:
  speech:
    api:
      url: ${{ secrets.CLOVA_URL }}
      key: ${{ secrets.CLOVA_API_KEY }}

ncp:
  endpoint: ${{ secrets.NCP_ENDPOINT }}
  region: kr-standard
  access:
    key: ${{ secrets.NCP_ACCESS_KEY }}
  secret:
    key: ${{ secrets.NCP_SECRET_KEY }}
  bucket:
    name: ${{ secrets.NCP_BUCKET_NAME }}
