name: Java CI with Gradle

on:
  push:
    branches: [ main, dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: ./
      APPLICATION: ${{ secrets.APPLICATION }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/checkout@v2
      - run: touch ./src/main/resources/application.yml
      - run: echo "${{env.APPLICATION}}" > ./src/main/resources/application.yml
      - uses: actions/upload-artifact@v3
        with:
          name: application.yml
          path: ./src/main/resources/application.yml

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ${{ env.working-directory }}

      - name: Build with Gradle
        run: ./gradlew build

      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker build -t next-pick .
          docker tag next-pick chaeyeon1234/next-pick:${GITHUB_SHA::7}
          docker push chaeyeon1234/next-pick:${GITHUB_SHA::7}
      #위 내용은 지속적 통합을 위한 스크립트입니다.
      #지속적 통합을 위한 스크립트 아래에 작성합니다.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Start Session Manager session
        run: aws ssm start-session --target i-060f949b84e77e10a

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_SERVER_HOST }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            docker rmi $(docker images -q)
            docker pull chaeyeon1234/next-pick:${GITHUB_SHA::7}
            docker tag chaeyeon1234/next-pick:${GITHUB_SHA::7} next-pick
            docker stop next-pick
            docker rm next-pick
            docker run -d --name next-pick -p 80:8080 next-pick
